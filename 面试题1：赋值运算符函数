abstract from http://blog.csdn.net/lwbeyond/article/details/6202256
拷贝构造函数的理解
对对象的拷贝是通过拷贝构造函数来完成整个复制过程的。若有下面四种形式，则这个函数是拷贝构造函数：
  Class(const Class& object, ..)
  Class(Class& object, ..)
  Class(volatile Class& object, ..)
  Class(const volatile Class& object, ..)
在c++中，有三种对象需要调用拷贝构造函数
1、对象以值传递的方式传入函数参数
  a、传入形参时，会先产生一个临时变量
  b、然后调用拷贝构造函数将对象的值赋给临时变量
  c、等函数执行完后，析构掉临时对象
2、对象以值传递的方式从函数返回
  a、先产生一个临时变量
  b、然后调用拷贝构造函数把对象赋给临时变量
  c、在函数执行到最后先析构掉局部变量
  d、等执行完后析构掉 临时对象
3、对象需要通过另外一个对象进行初始化

浅拷贝和深拷贝
1、默认拷贝构造函数
    默认的拷贝构造函数没有处理静态数据成员
2、浅拷贝
    所谓浅拷贝，是指在对象复制时，只对对象中的数据成员进行了简单的赋值。默认的是浅拷贝
3、深拷贝
    对对象的动态成员重新动态分配空间
4、防止默认拷贝发生
    声明一个私有拷贝函数，甚至可以不去定义。。

几个细节：
1、拷贝构造函数能调用private成员变量
2、一个累可以存在多于一个的拷贝构造函数
